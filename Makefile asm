NAME1		= asm

NAME2		= revasm

SRC_PATH	= src

OBJ_PATH	= obj

SRC_NAME1	= 	dynamic_string.c\
				errors_asm.c\
				main_asm.c\
				parser_asm.c\
				util_asm.c\
				header_asm.c\
				delete_asm.c\
				check_header.c\
				instructs_asm.c\
				get_instructs.c\
				check_instructs.c\
				struct_asm.c\
				op.c\
				line_asm.c

SRC_NAME2	= 	errors_revasm.c\
				errors_asm.c\
				main_revasm.c\
				file_revasm.c\
				parser_revasm.c\
				struct_asm.c\
				util_asm.c\
				op.c

OBJ_NAME1	:= $(SRC_NAME1:.c=.o)

OBJ_NAME2	:= $(SRC_NAME2:.c=.o)

OBJ1		= $(addprefix $(OBJ_PATH)/,$(OBJ_NAME1))

OBJ2		= $(addprefix $(OBJ_PATH)/,$(OBJ_NAME2))

LIB_PATH	= libft/libft.a

CC			= clang

CFLAGS		= -g -Wall -Wextra -Werror #-g3 -fsanitize=address,undefined

.PHONY		: all clean fclean re

all			: $(NAME1) $(NAME2)

$(NAME1)	: $(OBJ1)
	@make -C ./libft/
	@$(CC) $(CFLAGS) -o $@ $^ $(LIB_PATH)

$(NAME2)	: $(OBJ2)
	@make -C ./libft/
	@$(CC) $(CFLAGS) -o $@ $^ $(LIB_PATH)

$(OBJ_PATH)/%.o: $(SRC_PATH)/%.c
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	@$(CC) $(CFLAGS) $(CPPFLAGS) -o $@ -c $<

clean		:
	rm -f $(OBJ1) $(OBJ2)
	make clean -C ./libft/
	rmdir $(OBJ_PATH) 2> /dev/null || true

fclean		: clean
	rm -f $(NAME1) 
	make fclean -C ./libft/

re 			: fclean all
